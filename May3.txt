class Solution {
public:
    bool canConstruct(string ransomNote, string magazine) {
        unordered_map<char,int> umap;
        for(int i=0;i<magazine.length();i++)
        {
            if(umap.find(magazine[i])==umap.end())
            {
                umap.insert(make_pair(magazine[i],1));
            }
            else
            umap[magazine[i]]++;
        }
            for(int i=0;i<ransomNote.length();i++)
            {
                if(umap.find(ransomNote[i])==umap.end())
                    return false;
                else
                {umap[ransomNote[i]]--;
                 if(umap[ransomNote[i]]<=0)
                    umap.erase(ransomNote[i]);
            }
        }
        return true;
}
};