class Solution {
public:
    int firstUniqChar(string s) {
        unordered_map<char,int> umap;
        for(int i=0;i<s.length();i++)
        {
            if(umap.find(s[i])==umap.end())
            umap.insert(make_pair(s[i],i));
            else
            umap[s[i]]=-1;
        }
        int ans=INT_MAX;
        for(auto i=umap.begin();i!=umap.end();i++)
        {
            int c=i->second;
            if(c>=0)
            ans=min(c,ans);
        }
        if(ans==INT_MAX)
        return -1;
        return ans;
    }
};